version: 2
jobs:
  build:
    docker:
      - image: cimg/node:18.18.0
    steps:
      - checkout
      - add_ssh_keys:
          fingerprints:
            - b2:3f:b3:45:66:56:4b:96:19:2c:a8:73:83:67:7a:25
      - run:
          name: Install dependecies
          command: |
            cd ./back-end
            node -v
            npm -v
            npm install
          environment:
            FLATTPOD_MYSQL_PROD_HOST: $FLATTPOD_MYSQL_PROD_HOST
            FLATTPOD_MYSQL_NONPROD_HOST: $FLATTPOD_MYSQL_NONPROD_HOST
            FLATTPOD_MYSQL_USER: $FLATTPOD_MYSQL_USER
            FLATTPOD_MYSQL_PASSWORD: $FLATTPOD_MYSQL_PASSWORD
            FLATTPOD_MYSQL_DB: $FLATTPOD_MYSQL_DB
            FLATTPOD_MYSQL_LIMIT: $FLATTPOD_MYSQL_LIMIT
            FLATTPOD_MYSQL_PORT: $FLATTPOD_MYSQL_PORT
            FLATTPOD_SERVER_PORT: $FLATTPOD_SERVER_PORT
            FLATTPOD_PROD: $FLATTPOD_PROD
            SECRET_KEY: $SECRET_KEY
            SECRET_KEY_TEST: $SECRET_KEY
      - run:
          name: Create cfg.json file
          command: |
            echo "{\"FLATTPOD_MYSQL_PROD_HOST\":\"$FLATTPOD_MYSQL_PROD_HOST\"," > ./back-end/cfg.json
            echo "\"FLATTPOD_MYSQL_NONPROD_HOST\":\"$FLATTPOD_MYSQL_NONPROD_HOST\"," >> ./back-end/cfg.json
            echo "\"FLATTPOD_MYSQL_USER\":\"$FLATTPOD_MYSQL_USER\"," >> ./back-end/cfg.json
            echo "\"FLATTPOD_MYSQL_PASSWORD\":\"$FLATTPOD_MYSQL_PASSWORD\"," >> ./back-end/cfg.json
            echo "\"FLATTPOD_MYSQL_DB\":\"$FLATTPOD_MYSQL_DB\"," >> ./back-end/cfg.json
            echo "\"FLATTPOD_MYSQL_LIMIT\":\"$FLATTPOD_MYSQL_LIMIT\"," >> ./back-end/cfg.json
            echo "\"FLATTPOD_MYSQL_PORT\":\"$FLATTPOD_MYSQL_PORT\"," >> ./back-end/cfg.json
            echo "\"FLATTPOD_SERVER_PORT\":\"$FLATTPOD_SERVER_PORT\"," >> ./back-end/cfg.json
            echo "\"FLATTPOD_PROD\":\"$FLATTPOD_PROD\"," >> ./back-end/cfg.json
            echo "\"FLATT_POD_SECRET_KEY\":\"$SECRET_KEY\"," >> ./back-end/cfg.json
            echo "\"FLATT_POD_SECRET_KEY\":\"$SECRET_KEY_TEST\"}" >> ./back-end/cfg.json
            cat ./back-end/cfg.json
      - run:
          name: Build the project
          command: |
            cd ./back-end
            npm run build
            ls
          when: always
      - persist_to_workspace:
          root: ./back-end
          paths:
            - cfg.json
            - out
            - node_modules
  tests:
    docker:
      - image: cimg/node:18.18.0
    steps:
      - checkout
      - attach_workspace:
          at: ./back-end
      - run:
          name: Test
          command: |
            ls
            cd ./back-end
            echo "will be tests here soon"
            ls
  build-docker-container:
    docker:
      - image: docker:20.10.5
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: true
      - attach_workspace:
          at: ./back-end
      - run:
          name: Build Docker image fp-server
          command: |
            ls
            cd ./back-end
            ls
            docker build -t fp-server:latest .
  deploy-AWS-EC2:
    docker:
      - image: amazon/aws-cli:2.13.26
    steps:
      # - run:
      #     name: Install tar
      #     command: |
      #       sudo yum install tar
      #       tar --version
      - run:
          name: Install SSH client
          command: |
            yum install -y openssh-clients
      - checkout
      - add_ssh_keys:
          fingerprints:
            - c0:27:a3:f4:1d:9c:ba:3f:a4:c6:51:33:8e:37:7a:5a:c8:38:9d:1c
      # - attach_workspace:
      #     at: ./back-end
      - run:
          name: Connect to EC2
          command: |
            ls
            ssh ec2-user@$PUBLIC_IP
workflows:
  version: 2
  build:
    jobs:
      - build
      - tests:
          requires:
            - build
      # - build-docker-container:
      #     requires:
      #       - build
      - deploy-AWS-EC2:
              requires:
                - tests